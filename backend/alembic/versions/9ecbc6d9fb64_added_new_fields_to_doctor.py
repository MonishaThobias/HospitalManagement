"""Added new fields to Doctor

Revision ID: 9ecbc6d9fb64
Revises: 
Create Date: 2025-08-29 14:25:49.657675

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import text

# revision identifiers, used by Alembic.
revision: str = '9ecbc6d9fb64'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('doctors', sa.Column('email', sa.String(), nullable=False))
    op.add_column('doctors', sa.Column('address', sa.Text(), nullable=True))
    op.add_column('doctors', sa.Column('qualification', sa.String(), nullable=True))
    op.add_column('doctors', sa.Column('experience_years', sa.Integer(), nullable=True))
    op.add_column('doctors', sa.Column('gender', sa.String(), nullable=True))
    op.add_column('doctors', sa.Column('date_of_birth', sa.Date(), nullable=True))
    op.add_column('doctors', sa.Column('availability', sa.String(), nullable=True))
    op.add_column('doctors', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.create_unique_constraint(None, 'doctors', ['email'])
    op.execute(
    "ALTER TABLE patients ALTER COLUMN phone TYPE BIGINT USING phone::bigint"
)


    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
    "ALTER TABLE patients ALTER COLUMN phone TYPE VARCHAR(20)"
)

    op.drop_constraint(None, 'doctors', type_='unique')
    op.drop_column('doctors', 'is_active')
    op.drop_column('doctors', 'availability')
    op.drop_column('doctors', 'date_of_birth')
    op.drop_column('doctors', 'gender')
    op.drop_column('doctors', 'experience_years')
    op.drop_column('doctors', 'qualification')
    op.drop_column('doctors', 'address')
    op.drop_column('doctors', 'email')
    # ### end Alembic commands ###
